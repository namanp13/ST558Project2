---
title: "558 Project 2"
format: pdf
editor: visual
---

```{r}
library(ggplot2)
library(dplyr)
library(purrr)
```


```{r}
api_key <- "1f08e5ca-ec1f-4a50-805b-203ad159024c"
```


Function 1: Allows you to get players by the name

I used purrr::pluck (even though it's not covered) online but I saw that it was an easier way to extract lists from JSON files. It's because fromJSON() returns a nested list and I wanted the data inside that list. Pluck from the purrr package is a way to extract that data (found it on Tidyverse website)

```{r}
get_player <- function(name, api_key) {
  url <- paste0("https://api.balldontlie.io/v1/players?search=", name)
  response <- httr::GET(url, httr::add_headers(Authorization = api_key))
  
  httr::content(response, as = "text", encoding = "UTF-8") |>
    jsonlite::fromJSON() |>
    purrr::pluck("data") |>
    tibble::as_tibble()
}
```

Function 2: Allows you to get all teams
```{r}
get_teams <- function(api_key) {
  url2 <- "https://api.balldontlie.io/v1/teams"
  response2 <- httr::GET(url2, httr::add_headers(Authorization = api_key))
  
  httr::content(response2, as = "text", encoding = "UTF-8") |>
    jsonlite::fromJSON() |>
    purrr::pluck("data") |>
    tibble::as_tibble()
}
```

Test Functions

```{r}
players <- get_player(name = "Smith", api_key)
teams <- get_teams(api_key)
```

Numerical and graphical summaries

```{r}
table(teams_data$conference, teams_data$division)
```

```{r}
teams_data %>%
  group_by(conference) %>%
  summarise(n_teams = n())
```

```{r}
table(players_data$first_name)
```

```{r}
teams_data |>
  mutate(city_length = nchar(city)) |>
  group_by(conference)  |>
  summarise(avg_city_length = mean(city_length))
```

```{r}
ggplot(teams_data, aes(x = conference, fill = division)) +
  geom_bar() +
  labs(title = "Conference and Division", x = "Conference", y = "Count", fill = "Division")
```

```{r, fig.width=12, fig.height=6}
 teams_data  |>
  mutate(city_length = nchar(city))  |>
  ggplot(aes(x = reorder(full_name, city_length), y = city_length)) +
  geom_bar(stat = "identity", fill = "green") +
  coord_flip() +
  labs(
    title = "Length by Team",
    x = "Team",
    y = "Length of Name")
```

```{r}
heatmap_for_teams <- teams_data  |>
  count(conference, division)

ggplot(heatmap_for_teams, aes(x = conference, y = division, fill = n)) +
  geom_tile() +
  labs(title = "Conference vs Division", x = "Conference", y = "Division", fill = "Teams")
```

```{r}
library(ggplot2)

ggplot(players_data, aes(x = position)) +
  geom_bar(fill = "red") +
  labs(
    title = "# of Players by Position",
    x = "Position",
    y = "Count")
```

```{r}
ggplot(players_data, aes(x = as.numeric(draft_year))) +
  geom_histogram(binwidth = 1, fill = "orange", color = "yellow") +
  labs(
    title = "Draft Year",
    x = "Draft Year",
    y = "Number of Players")
```














